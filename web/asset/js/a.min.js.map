{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","js/a.js"],"names":[],"mappings":"AAAA;;;;;ACAA,CAAC,YAAW;AACV,MAAI,CAAJ,EAAO,MAAP,EAAe,KAAf,EAAsB,OAAtB,EAA+B,KAA/B,EAAsC,OAAtC,EAA+C,IAA/C,EAAqD,GAArD,EAA0D,OAA1D,EAAmE,IAAnE,EAAyE,IAAzE,EAA+E,IAA/E,EAAqF,QAArF;;AAEA,MAAI,QAAQ,QAAR,CAAJ;;AAEA,QAAM,QAAQ,QAAR,CAAN,EAAyB,QAAQ,IAAI,KAArC,EAA4C,UAAU,IAAI,OAA1D;;AAEA,SAAO,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CAAP;;AAEA,YAAU;AACR,YAAQ,MADA;AAER,WAAO;AAFC,GAAV;;AAKA,SAAO,8EAAP;;AAEA,SAAO,iFAAP;;AAEA,aAAY,UAAS,KAAT,EAAgB;AAC1B,WAAO,YAAW;AAChB,aAAO,iBAAkB,IAAI,IAAJ,GAAW,kBAAX,EAAzB;AACD,KAFD;AAGD,GAJU,CAIR,IAJQ,CAAX;;AAMA,SAAO,gBAAW;AAChB,WAAO,iBAAkB,IAAI,IAAJ,GAAW,kBAAX,EAAzB;AACD,GAFD;;AAIA,eAAY,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AACpC,WAAO,QAAQ,GAAR,CAAP;AACD,GAFD;;AAIA,YAAU,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAAV;;AAEA,SAAO;AACL,aAAS;AACP,YAAM,KADC;AAEP,WAAK;AAFE,KADJ;AAKL,YAAQ;AACN,YAAM,KADA;AAEN,WAAK;AAFC;AALH,GAAP;;AAWA,WAAU,YAAW;AACnB,aAAS,MAAT,CAAgB,SAAhB,EAA2B,QAA3B,EAAqC;AACnC,WAAK,SAAL,GAAiB,SAAjB;AACA,WAAK,QAAL,GAAgB,QAAhB;AACD;;AAED,WAAO,SAAP,CAAiB,IAAjB,GAAwB,YAAW;AACjC,aAAO,KAAK,UAAL,GAAkB,GAAlB,GAAwB,KAAK,SAApC;AACD,KAFD;;AAIA,WAAO,SAAP,CAAiB,OAAjB,GAA2B,UAAS,IAAT,EAAe;AACxC,UAAI,KAAJ;AACA,cAAQ,KAAK,KAAL,CAAW,GAAX,CAAR;AACA,WAAK,SAAL,GAAiB,MAAM,CAAN,CAAjB;AACA,aAAO,KAAK,QAAL,GAAgB,MAAM,CAAN,CAAvB;AACD,KALD;;AAOA,WAAO,MAAP;AAED,GAnBQ,EAAT;;AAqBA,UAAQ,IAAI,MAAJ,CAAW,OAAX,EAAoB,UAApB,CAAR;;AAEA,QAAM,OAAN,CAAc,gBAAd;;AAEA,UAAQ,GAAR,CAAY,MAAM,IAAN,EAAZ;AAED,CAxED,EAwEG,IAxEH","file":"a.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function() {\n  var $, Person, alert, bitlist, blake, confirm, kids, ref, singers, song, text, time, time_gen;\n\n  $ = require('jquery');\n\n  ref = require('dialog'), alert = ref.alert, confirm = ref.confirm;\n\n  song = [\"do\", \"re\", \"mi\", \"fa\", \"so\"];\n\n  singers = {\n    Jagger: \"Rock\",\n    Elvis: \"Roll\"\n  };\n\n  text = \"Every literary critic believes he will outwit history and have the last word\";\n\n  text = \"Every literary critic believes he will\\n  outwit history and have the last word\";\n\n  time_gen = (function(_this) {\n    return function() {\n      return \"The time is \" + (new Date().toLocaleTimeString());\n    };\n  })(this);\n\n  time = function() {\n    return \"The time is \" + (new Date().toLocaleTimeString());\n  };\n\n  new Promise(function(resolve, reject) {\n    return resolve(120);\n  });\n\n  bitlist = [1, 0, 1, 0, 0, 1, 1, 1, 1];\n\n  kids = {\n    brother: {\n      name: \"Max\",\n      age: 11\n    },\n    sister: {\n      name: \"Ida\",\n      age: 9\n    }\n  };\n\n  Person = (function() {\n    function Person(firstName, lastName) {\n      this.firstName = firstName;\n      this.lastName = lastName;\n    }\n\n    Person.prototype.name = function() {\n      return this.first_name + \" \" + this.last_name;\n    };\n\n    Person.prototype.setName = function(name) {\n      var names;\n      names = name.split(\" \");\n      this.firstName = names[0];\n      return this.lastName = names[1];\n    };\n\n    return Person;\n\n  })();\n\n  blake = new Person(\"Blake\", \"Williams\");\n\n  blake.setName(\"Blake Anderson\");\n\n  console.log(blake.name());\n\n}).call(this);\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJqcy9hLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7OztBQ0FBLENBQUMsWUFBVztBQUNWLE1BQUksQ0FBSixFQUFPLE1BQVAsRUFBZSxLQUFmLEVBQXNCLE9BQXRCLEVBQStCLEtBQS9CLEVBQXNDLE9BQXRDLEVBQStDLElBQS9DLEVBQXFELEdBQXJELEVBQTBELE9BQTFELEVBQW1FLElBQW5FLEVBQXlFLElBQXpFLEVBQStFLElBQS9FLEVBQXFGLFFBQXJGOztBQUVBLE1BQUksUUFBUSxRQUFSLENBQUo7O0FBRUEsUUFBTSxRQUFRLFFBQVIsQ0FBTixFQUF5QixRQUFRLElBQUksS0FBckMsRUFBNEMsVUFBVSxJQUFJLE9BQTFEOztBQUVBLFNBQU8sQ0FBQyxJQUFELEVBQU8sSUFBUCxFQUFhLElBQWIsRUFBbUIsSUFBbkIsRUFBeUIsSUFBekIsQ0FBUDs7QUFFQSxZQUFVO0FBQ1IsWUFBUSxNQURBO0FBRVIsV0FBTztBQUZDLEdBQVY7O0FBS0EsU0FBTyw4RUFBUDs7QUFFQSxTQUFPLGlGQUFQOztBQUVBLGFBQVksVUFBUyxLQUFULEVBQWdCO0FBQzFCLFdBQU8sWUFBVztBQUNoQixhQUFPLGlCQUFrQixJQUFJLElBQUosR0FBVyxrQkFBWCxFQUF6QjtBQUNELEtBRkQ7QUFHRCxHQUpVLENBSVIsSUFKUSxDQUFYOztBQU1BLFNBQU8sZ0JBQVc7QUFDaEIsV0FBTyxpQkFBa0IsSUFBSSxJQUFKLEdBQVcsa0JBQVgsRUFBekI7QUFDRCxHQUZEOztBQUlBLGVBQVksVUFBUyxPQUFULEVBQWtCLE1BQWxCLEVBQTBCO0FBQ3BDLFdBQU8sUUFBUSxHQUFSLENBQVA7QUFDRCxHQUZEOztBQUlBLFlBQVUsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixFQUFtQixDQUFuQixFQUFzQixDQUF0QixFQUF5QixDQUF6QixDQUFWOztBQUVBLFNBQU87QUFDTCxhQUFTO0FBQ1AsWUFBTSxLQURDO0FBRVAsV0FBSztBQUZFLEtBREo7QUFLTCxZQUFRO0FBQ04sWUFBTSxLQURBO0FBRU4sV0FBSztBQUZDO0FBTEgsR0FBUDs7QUFXQSxXQUFVLFlBQVc7QUFDbkIsYUFBUyxNQUFULENBQWdCLFNBQWhCLEVBQTJCLFFBQTNCLEVBQXFDO0FBQ25DLFdBQUssU0FBTCxHQUFpQixTQUFqQjtBQUNBLFdBQUssUUFBTCxHQUFnQixRQUFoQjtBQUNEOztBQUVELFdBQU8sU0FBUCxDQUFpQixJQUFqQixHQUF3QixZQUFXO0FBQ2pDLGFBQU8sS0FBSyxVQUFMLEdBQWtCLEdBQWxCLEdBQXdCLEtBQUssU0FBcEM7QUFDRCxLQUZEOztBQUlBLFdBQU8sU0FBUCxDQUFpQixPQUFqQixHQUEyQixVQUFTLElBQVQsRUFBZTtBQUN4QyxVQUFJLEtBQUo7QUFDQSxjQUFRLEtBQUssS0FBTCxDQUFXLEdBQVgsQ0FBUjtBQUNBLFdBQUssU0FBTCxHQUFpQixNQUFNLENBQU4sQ0FBakI7QUFDQSxhQUFPLEtBQUssUUFBTCxHQUFnQixNQUFNLENBQU4sQ0FBdkI7QUFDRCxLQUxEOztBQU9BLFdBQU8sTUFBUDtBQUVELEdBbkJRLEVBQVQ7O0FBcUJBLFVBQVEsSUFBSSxNQUFKLENBQVcsT0FBWCxFQUFvQixVQUFwQixDQUFSOztBQUVBLFFBQU0sT0FBTixDQUFjLGdCQUFkOztBQUVBLFVBQVEsR0FBUixDQUFZLE1BQU0sSUFBTixFQUFaO0FBRUQsQ0F4RUQsRUF3RUcsSUF4RUgiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiKGZ1bmN0aW9uKCkge1xuICB2YXIgJCwgUGVyc29uLCBhbGVydCwgYml0bGlzdCwgYmxha2UsIGNvbmZpcm0sIGtpZHMsIHJlZiwgc2luZ2Vycywgc29uZywgdGV4dCwgdGltZSwgdGltZV9nZW47XG5cbiAgJCA9IHJlcXVpcmUoJ2pxdWVyeScpO1xuXG4gIHJlZiA9IHJlcXVpcmUoJ2RpYWxvZycpLCBhbGVydCA9IHJlZi5hbGVydCwgY29uZmlybSA9IHJlZi5jb25maXJtO1xuXG4gIHNvbmcgPSBbXCJkb1wiLCBcInJlXCIsIFwibWlcIiwgXCJmYVwiLCBcInNvXCJdO1xuXG4gIHNpbmdlcnMgPSB7XG4gICAgSmFnZ2VyOiBcIlJvY2tcIixcbiAgICBFbHZpczogXCJSb2xsXCJcbiAgfTtcblxuICB0ZXh0ID0gXCJFdmVyeSBsaXRlcmFyeSBjcml0aWMgYmVsaWV2ZXMgaGUgd2lsbCBvdXR3aXQgaGlzdG9yeSBhbmQgaGF2ZSB0aGUgbGFzdCB3b3JkXCI7XG5cbiAgdGV4dCA9IFwiRXZlcnkgbGl0ZXJhcnkgY3JpdGljIGJlbGlldmVzIGhlIHdpbGxcXG4gIG91dHdpdCBoaXN0b3J5IGFuZCBoYXZlIHRoZSBsYXN0IHdvcmRcIjtcblxuICB0aW1lX2dlbiA9IChmdW5jdGlvbihfdGhpcykge1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBcIlRoZSB0aW1lIGlzIFwiICsgKG5ldyBEYXRlKCkudG9Mb2NhbGVUaW1lU3RyaW5nKCkpO1xuICAgIH07XG4gIH0pKHRoaXMpO1xuXG4gIHRpbWUgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gXCJUaGUgdGltZSBpcyBcIiArIChuZXcgRGF0ZSgpLnRvTG9jYWxlVGltZVN0cmluZygpKTtcbiAgfTtcblxuICBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICByZXR1cm4gcmVzb2x2ZSgxMjApO1xuICB9KTtcblxuICBiaXRsaXN0ID0gWzEsIDAsIDEsIDAsIDAsIDEsIDEsIDEsIDFdO1xuXG4gIGtpZHMgPSB7XG4gICAgYnJvdGhlcjoge1xuICAgICAgbmFtZTogXCJNYXhcIixcbiAgICAgIGFnZTogMTFcbiAgICB9LFxuICAgIHNpc3Rlcjoge1xuICAgICAgbmFtZTogXCJJZGFcIixcbiAgICAgIGFnZTogOVxuICAgIH1cbiAgfTtcblxuICBQZXJzb24gPSAoZnVuY3Rpb24oKSB7XG4gICAgZnVuY3Rpb24gUGVyc29uKGZpcnN0TmFtZSwgbGFzdE5hbWUpIHtcbiAgICAgIHRoaXMuZmlyc3ROYW1lID0gZmlyc3ROYW1lO1xuICAgICAgdGhpcy5sYXN0TmFtZSA9IGxhc3ROYW1lO1xuICAgIH1cblxuICAgIFBlcnNvbi5wcm90b3R5cGUubmFtZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuZmlyc3RfbmFtZSArIFwiIFwiICsgdGhpcy5sYXN0X25hbWU7XG4gICAgfTtcblxuICAgIFBlcnNvbi5wcm90b3R5cGUuc2V0TmFtZSA9IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICAgIHZhciBuYW1lcztcbiAgICAgIG5hbWVzID0gbmFtZS5zcGxpdChcIiBcIik7XG4gICAgICB0aGlzLmZpcnN0TmFtZSA9IG5hbWVzWzBdO1xuICAgICAgcmV0dXJuIHRoaXMubGFzdE5hbWUgPSBuYW1lc1sxXTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIFBlcnNvbjtcblxuICB9KSgpO1xuXG4gIGJsYWtlID0gbmV3IFBlcnNvbihcIkJsYWtlXCIsIFwiV2lsbGlhbXNcIik7XG5cbiAgYmxha2Uuc2V0TmFtZShcIkJsYWtlIEFuZGVyc29uXCIpO1xuXG4gIGNvbnNvbGUubG9nKGJsYWtlLm5hbWUoKSk7XG5cbn0pLmNhbGwodGhpcyk7XG4iXX0="}