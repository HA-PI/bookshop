swagger: '2.0'
info:
  description: This is BookShop WebAPI
  version: 1.0.0
  title: BookShop WebAPI
  # put the contact info for your development or API team
  contact:
    email: moyuyc95@gmail.com

# tags are used for organizing operations
tags:
- name: user
  description: 用户
- name: developers
  description: Operations available to regular developers

paths:
  /user/register:
    post:
      consumes:
      - application/json
      - application/x-www-form-urlencoded
      tags:
      - user
      summary: 用户注册
      operationId: register
      description: |
        用户注册接口
      parameters:
      - $ref: '#/parameters/Username'
      - $ref: '#/parameters/Password'

      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Message'
        400:
          description: bad input parameter
  /user/login:
      get:
        consumes:
        - application/json
        - application/x-www-form-urlencoded
        tags:
        - user
        summary: 用户登录
        operationId: register
        description: |
          用户登录接口
        parameters:
        - $ref: '#/parameters/Username'
        - $ref: '#/parameters/Password'

        responses:
          200:
            description: OK
            schema:
              $ref: '#/definitions/Message'
          400:
            description: bad input parameter

definitions:
  Message:
    type: "object"
    required:
    - "code"
    - "data"
    properties:
      code:
        type: number
        example: 200
        description: "状态码"
      data:
        type: string
        example: "成功了"
        description: "提示信息"
  User:
    type: "object"
    required:
    - "username"
    - "password"
    properties:
      username:
        $ref: '#/definitions/Username'
      password:
        $ref: '#/definitions/Password'
    xml:
      name: "User"

  Username:
    type: string
    example: "moyuyc"
    description: "用户名"

  Password:
    type: "string"
    example: "moyuyc"
    description: "密码"


parameters:
  User:
    name: user
    in: body
    schema:
      $ref: '#/definitions/Username'

  Username:
    type: string
    name: username
    maxLength: 10
    minLength: 6
    in: formData
    description: 用户名
    required: true

  Password:
    name: password
    in: formData
    maxLength: 10
    minLength: 6
    description: 密码
    type: string
    required: true

# Added by API Auto Mocking Plugin
consumes:
- application/json
- application/x-www-form-urlencoded
produces:
  - application/json
  - application/x-www-form-urlencoded

host: moyuyc.xyz:8080
# localhost:8080 # moyuyc.xyz:8080
basePath: /api
schemes:
  - http
